"""
MemoryMap - Interaktivn√≠ Mapa Vzpom√≠nek

Streamlit aplikace pro vizualizaci a spr√°vu geograficky um√≠stƒõn√Ωch vzpom√≠nek.
Souƒç√°st projektu vytvo≈ôen√©ho pro demonstraci technick√Ωch dovednost√≠ p≈ôi p≈ô√≠pravƒõ
na pohovor.

Funkce:
- Interaktivn√≠ mapa pro zobrazen√≠ vzpom√≠nek
- Nahr√°v√°n√≠ hlasov√Ωch z√°znam≈Ø
- Vyhled√°v√°n√≠ ve vzpom√≠nk√°ch
- Vizualizace okoln√≠ch m√≠st

Autor: Vytvo≈ôeno jako uk√°zka dovednost√≠ pro pohovor.
"""

import streamlit as st  # Knihovna pro tvorbu webov√Ωch aplikac√≠
import folium  # Knihovna pro pr√°ci s mapami
import requests  # Knihovna pro HTTP po≈æadavky
from streamlit_folium import folium_static, st_folium  # Pro zobrazen√≠ folium map ve Streamlitu
from datetime import datetime  # Pro pr√°ci s datem a ƒçasem
import time  # Pro pr√°ci s ƒçasem
import json  # Pro pr√°ci s JSON daty
import os  # Pro pr√°ci s promƒõnn√Ωmi prost≈ôed√≠

# Konfigurace backendu
BACKEND_URL = os.getenv('BACKEND_URL', 'https://memorymap-api.onrender.com')

# Nastaven√≠ str√°nky - z√°kladn√≠ konfigurace Streamlit aplikace
st.set_page_config(
    page_title="MemoryMap",  # Titulek str√°nky v prohl√≠≈æeƒçi
    page_icon="üó∫Ô∏è",  # Ikona str√°nky v prohl√≠≈æeƒçi
    layout="wide",  # ≈†irok√© rozlo≈æen√≠ str√°nky
    initial_sidebar_state="expanded"  # Postrann√≠ panel bude na zaƒç√°tku rozbalen√Ω
)

# Konstanty aplikace
DEFAULT_LAT = 49.8  # V√Ωchoz√≠ zemƒõpisn√° ≈°√≠≈ôka (zhruba st≈ôed ƒåR)
DEFAULT_LON = 15.5  # V√Ωchoz√≠ zemƒõpisn√° d√©lka (zhruba st≈ôed ƒåR)

# Nastaven√≠ CSS styl≈Ø pro lep≈°√≠ vzhled aplikace
st.markdown("""
<style>
    .main-header {
        text-align: center;
        color: #1E88E5;
        font-size: 3rem;
        margin-bottom: 1rem;
    }
    .subheader {
        font-size: 1.5rem;
        color: #0D47A1;
        margin-bottom: 1.5rem;
    }
    .success-msg {
        background-color: #DCEDC8;
        padding: 1rem;
        border-radius: 5px;
        border-left: 5px solid #8BC34A;
    }
    .error-msg {
        background-color: #FFCCBC;
        padding: 1rem;
        border-radius: 5px;
        border-left: 5px solid #FF5722;
    }
    .tooltip {
        position: relative;
        display: inline-block;
    }
    .tooltip .tooltiptext {
        visibility: hidden;
        width: 200px;
        background-color: #555;
        color: #fff;
        text-align: center;
        border-radius: 6px;
        padding: 5px;
        position: absolute;
        z-index: 1;
        bottom: 125%;
        left: 50%;
        margin-left: -100px;
        opacity: 0;
        transition: opacity 0.3s;
    }
    .tooltip:hover .tooltiptext {
        visibility: visible;
        opacity: 1;
    }
</style>
""", unsafe_allow_html=True)

# Funkce pro komunikaci s backendem
def api_request(endpoint, method='GET', data=None):
    url = f"{BACKEND_URL}{endpoint}"
    try:
        if method == 'GET':
            response = requests.get(url)
        elif method == 'POST':
            response = requests.post(url, json=data)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.RequestException as e:
        st.error(f"Chyba p≈ôi komunikaci s API: {str(e)}")
        return None

# Helper funkce pro vytvo≈ôen√≠ mapy se vzpom√≠nkami
def create_map(memories, center_lat=DEFAULT_LAT, center_lon=DEFAULT_LON):
    """Vytvo≈ôen√≠ mapy s markery vzpom√≠nek"""
    m = folium.Map(location=[center_lat, center_lon], zoom_start=7)
    
    # P≈ôid√°n√≠ z√°kladn√≠ mapov√© vrstvy Mapy.cz
    folium.TileLayer(
        tiles='https://mapserver.mapy.cz/base-m/{z}-{x}-{y}',
        attr='Mapy.cz',
        name='Z√°kladn√≠ mapa',
        overlay=False
    ).add_to(m)
    
    # P≈ôid√°n√≠ historick√© mapov√© vrstvy
    folium.TileLayer(
        tiles='https://mapserver.mapy.cz/19century-m/{z}-{x}-{y}',
        attr='Mapy.cz - 19. stolet√≠',
        name='Historick√° mapa',
        overlay=True
    ).add_to(m)
    
    # P≈ôid√°n√≠ ovladaƒçe vrstev
    folium.LayerControl().add_to(m)
    
    if not memories:
        return m
    
    for memory in memories:
        popup_content = f"""
        <div style='width: 300px'>
            <h4>{memory['location']}</h4>
            <p>{memory['text']}</p>
            <p><small><b>Kl√≠ƒçov√° slova:</b> {', '.join(memory['keywords'])}</small></p>
            <p><small><b>Vytvo≈ôeno:</b> {memory.get('created_at', 'Nezn√°m√© datum')}</small></p>
            <a href="#" onclick="showMemoryDetail('{memory['id']}')">Zobrazit detail</a>
        </div>
        """
        
        folium.Marker(
            [memory["latitude"], memory["longitude"]],
            popup=folium.Popup(popup_content, max_width=300),
            tooltip=memory["location"],
            icon=folium.Icon(icon="bookmark", prefix="fa", color="blue")
        ).add_to(m)
    
    # P≈ôid√°n√≠ click handleru pro p≈ôid√°n√≠ nov√© vzpom√≠nky
    m.add_child(folium.ClickForMarker(popup="Kliknƒõte pro p≈ôid√°n√≠ vzpom√≠nky"))
    
    return m

# Funkce pro georeferencov√°n√≠ n√°zvu m√≠sta
def georeference_placename(place_name, historical_period="1950"):
    """Georeferencov√°n√≠ historick√©ho n√°zvu m√≠sta pomoc√≠ API"""
    try:
        response = requests.post(
            f"{BACKEND_URL}/georef", 
            json={"place_name": place_name, "historical_period": historical_period},
            timeout=10
        )
        if response.status_code == 200:
            return response.json()
        else:
            st.error(f"Chyba p≈ôi georeferencov√°n√≠: {response.text}")
            return None
    except Exception as e:
        st.error(f"Chyba p≈ôi komunikaci s API: {str(e)}")
        return None

# Funkce pro z√≠sk√°n√≠ v≈°ech vzpom√≠nek z API
def get_memories():
    """Z√≠sk√°n√≠ v≈°ech vzpom√≠nek z API"""
    try:
        # Odesl√°n√≠ GET po≈æadavku na backend API
        response = requests.get(f"{BACKEND_URL}/api/memories", timeout=5)
        if response.status_code == 200:
            # Pokud byl po≈æadavek √∫spƒõ≈°n√Ω, vr√°t√≠me data
            return response.json()
        else:
            # Pokud nastal probl√©m, zobraz√≠me chybovou zpr√°vu
            st.error(f"Chyba p≈ôi naƒç√≠t√°n√≠ vzpom√≠nek (Status: {response.status_code})")
            return []
    except requests.exceptions.ConnectionError:
        # Pokud se nelze p≈ôipojit k API
        st.error(f"Nepoda≈ôilo se p≈ôipojit k API na adrese {BACKEND_URL}. Zkontrolujte, zda backend bƒõ≈æ√≠.")
        return []
    except Exception as e:
        # Zachycen√≠ v≈°ech ostatn√≠ch chyb
        st.error(f"Chyba p≈ôi komunikaci s API: {str(e)}")
        return []

# Funkce pro p≈ôid√°n√≠ nov√© vzpom√≠nky p≈ôes API
def add_memory(text, location, lat, lon):
    """P≈ôid√°n√≠ nov√© vzpom√≠nky p≈ôes API"""
    try:
        # P≈ô√≠prava dat pro odesl√°n√≠
        data = {
            "text": text,
            "location": location,
            "latitude": lat,
            "longitude": lon
        }
        
        # Odesl√°n√≠ POST po≈æadavku na backend API
        response = requests.post(
            f"{BACKEND_URL}/api/analyze",
            json=data,
            timeout=10
        )
        
        # Kontrola odpovƒõdi
        if response.status_code == 200:
            return True, "Vzpom√≠nka byla √∫spƒõ≈°nƒõ p≈ôid√°na!"
        else:
            return False, f"Chyba p≈ôi p≈ôid√°v√°n√≠ vzpom√≠nky: {response.text}"
    except requests.exceptions.ConnectionError:
        # Pokud se nelze p≈ôipojit k API
        return False, f"Nepoda≈ôilo se p≈ôipojit k API na adrese {BACKEND_URL}. Zkontrolujte, zda backend bƒõ≈æ√≠."
    except Exception as e:
        # Zachycen√≠ v≈°ech ostatn√≠ch chyb
        return False, f"Chyba p≈ôi komunikaci s API: {str(e)}"

# Sidebar - informace o aplikaci v postrann√≠m panelu
with st.sidebar:
    # Logo aplikace
    st.image("https://via.placeholder.com/150x150.png?text=MemoryMap", width=150)
    st.title("O aplikaci")
    st.info(
        "MemoryMap je aplikace pro ukl√°d√°n√≠ a vizualizaci va≈°ich vzpom√≠nek "
        "na mapƒõ. P≈ôidejte vzpom√≠nku, vyberte um√≠stƒõn√≠ a nechte AI "
        "analyzovat kl√≠ƒçov√° slova."
    )
    
    # Georeferencov√°n√≠ historick√Ωch n√°zv≈Ø
    st.subheader("Georeferencov√°n√≠")
    with st.form("georef_form"):
        place_name = st.text_input("N√°zev historick√©ho m√≠sta")
        historical_period = st.selectbox(
            "Historick√© obdob√≠",
            options=["1850", "1900", "1950", "2000"],
            index=2
        )
        georef_submit = st.form_submit_button("Georeferencovat")
        
        if georef_submit and place_name:
            with st.spinner("Hled√°m historick√© m√≠sto..."):
                result = georeference_placename(place_name, historical_period)
                if result and "error" not in result:
                    st.success(f"Nalezeno m√≠sto: {result['name']}")
                    st.write(f"Geometrie: {result['geometry']}")
                elif result and "error" in result:
                    st.error(result["error"])
                else:
                    st.error("Nepoda≈ôilo se georeferencovat m√≠sto.")
    
    # Kontrola p≈ôipojen√≠ k API
    st.subheader("Status API")
    try:
        response = requests.get(f"{BACKEND_URL}", timeout=2)
        if response.status_code == 200:
            st.success("‚úÖ API je dostupn√©")
        else:
            st.warning(f"‚ö†Ô∏è API vrac√≠ status k√≥d: {response.status_code}")
    except:
        st.error("‚ùå API nen√≠ dostupn√©")

# Hlavn√≠ obsah aplikace
st.markdown("<h1 class='main-header'>MemoryMap</h1>", unsafe_allow_html=True)
st.markdown("<p class='subheader'>Vizualizujte sv√© vzpom√≠nky na mapƒõ</p>", unsafe_allow_html=True)

# Z√°lo≈æky pro r≈Øzn√© ƒç√°sti aplikace
tab1, tab2 = st.tabs(["Mapa vzpom√≠nek", "O aplikaci"])

with tab1:
    # Mapa
    st.markdown('<div class="tooltip">üó∫Ô∏è Interaktivn√≠ mapa<span class="tooltiptext">Kliknƒõte na mapu pro p≈ôid√°n√≠ nov√© vzpom√≠nky nebo na pin pro zobrazen√≠ detailu</span></div>', unsafe_allow_html=True)
    
    # Naƒçten√≠ vzpom√≠nek
    memories = get_memories()
    
    # Vytvo≈ôen√≠ a zobrazen√≠ mapy
    m = create_map(memories)
    map_data = st_folium(m, width=1200, height=600)
    
    # Pokud u≈æivatel klikl na mapu
    if map_data and map_data.get("last_clicked"):
        lat, lon = map_data["last_clicked"]["lat"], map_data["last_clicked"]["lng"]
        
        # Formul√°≈ô pro p≈ôid√°n√≠ vzpom√≠nky
        with st.form("memory_form"):
            st.markdown('<div class="tooltip">üìù Nov√° vzpom√≠nka<span class="tooltiptext">Zapi≈°te svou vzpom√≠nku spojenou s t√≠mto m√≠stem</span></div>', unsafe_allow_html=True)
            text = st.text_area("Text vzpom√≠nky")
            location = st.text_input("N√°zev m√≠sta")
            
            if st.form_submit_button("Ulo≈æit vzpom√≠nku"):
                if text and location:
                    success, message = add_memory(text, location, lat, lon)
                    if success:
                        st.success(message)
                        st.experimental_rerun()
                    else:
                        st.error(message)
                else:
                    st.warning("Vypl≈àte pros√≠m v≈°echna pole")

with tab2:
    st.header("O aplikaci MemoryMap")
    
    # Struktura aplikace
    st.markdown("""
    ### Struktura aplikace
    
    ```
    MemoryMap/
    ‚îú‚îÄ‚îÄ Frontend (Streamlit)
    ‚îÇ   ‚îî‚îÄ‚îÄ Interaktivn√≠ mapa s mo≈ænost√≠ p≈ôid√°v√°n√≠ vzpom√≠nek
    ‚îÇ   ‚îú‚îÄ‚îÄ Backend (FastAPI)
    ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ REST API pro spr√°vu vzpom√≠nek
    ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Anal√Ωza textu a extrakce kl√≠ƒçov√Ωch slov
    ‚îÇ   ‚îî‚îÄ‚îÄ Database (PostgreSQL + PostGIS)
    ‚îÇ       ‚îî‚îÄ‚îÄ Geografick√° datab√°ze vzpom√≠nek
    ```
    
    ### O projektu
    
    MemoryMap je interaktivn√≠ aplikace pro ukl√°d√°n√≠ a vizualizaci osobn√≠ch vzpom√≠nek na mapƒõ. 
    Projekt vznikl jako uk√°zka technick√Ωch dovednost√≠ p≈ôi p≈ô√≠pravƒõ na pohovor.
    
    ### Hlavn√≠ funkce
    
    - üó∫Ô∏è Interaktivn√≠ mapa pro zobrazen√≠ vzpom√≠nek
    - üìù Jednoduch√© p≈ôid√°v√°n√≠ vzpom√≠nek kliknut√≠m na mapu
    - üîç Automatick√° anal√Ωza textu a extrakce kl√≠ƒçov√Ωch slov
    - üåç Podpora historick√Ωch mapov√Ωch podklad≈Ø
    """)

# Patiƒçka aplikace
st.markdown("---")
st.markdown(
    "<div style='text-align: center;'>"
    "MemoryMap AI ¬© 2023 | Vytvo≈ôeno pomoc√≠ Streamlit"
    "</div>",
    unsafe_allow_html=True
) 